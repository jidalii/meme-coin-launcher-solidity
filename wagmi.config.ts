import { defineConfig } from "@wagmi/cli";
import { react, foundry } from "@wagmi/cli/plugins";

export default defineConfig({
  out: "generated.ts",
  contracts: [
    {
      name: "MemexGame",
      abi: [
        { inputs: [], name: "BlockGapNumberTooHigh", type: "error" },
        { inputs: [], name: "BlockGapNumberTooLow", type: "error" },
        { inputs: [], name: "BuyTooLow", type: "error" },
        { inputs: [], name: "CannotBuyInactiveGame", type: "error" },
        { inputs: [], name: "CannotBuyToZeroAddress", type: "error" },
        { inputs: [], name: "CannotCreateTokenWithAlreadyRaisedFunds", type: "error" },
        { inputs: [], name: "CannotEnterFinalPhraseYet", type: "error" },
        { inputs: [], name: "CannotFinalizeYet", type: "error" },
        { inputs: [], name: "CreateTokenFeeTooHigh", type: "error" },
        { inputs: [], name: "DexPoolAlreadyExisted", type: "error" },
        { inputs: [], name: "FinalPhaseDurationTooLong", type: "error" },
        { inputs: [], name: "FinalPhaseDurationTooShort", type: "error" },
        { inputs: [], name: "FinalPhraseAlreadyStarted", type: "error" },
        { inputs: [], name: "GameAlreadyFinalized", type: "error" },
        { inputs: [], name: "GameIsNotOver", type: "error" },
        { inputs: [], name: "GameNotFinalized", type: "error" },
        { inputs: [], name: "InsufficientAmount", type: "error" },
        { inputs: [], name: "InsufficientBalance", type: "error" },
        { inputs: [], name: "InsufficientBlockGap", type: "error" },
        { inputs: [{ internalType: "uint256", name: "number", type: "uint256" }], name: "InsufficientKnockoutTokens", type: "error" },
        { inputs: [], name: "InvalidGame", type: "error" },
        { inputs: [], name: "InvalidGameNumber", type: "error" },
        { inputs: [], name: "KnockoutGoalAmountTooHigh", type: "error" },
        { inputs: [], name: "KnockoutGoalAmountTooLow", type: "error" },
        { inputs: [], name: "KnockoutTokenNumberTooHigh", type: "error" },
        { inputs: [], name: "KnockoutTokenNumberTooLow", type: "error" },
        { inputs: [], name: "LpFeeBpTooHigh", type: "error" },
        { inputs: [], name: "LpFeeBpTooLow", type: "error" },
        { inputs: [], name: "MustBurnSomething", type: "error" },
        { inputs: [], name: "NoGameRunning", type: "error" },
        { inputs: [], name: "NotWinners", type: "error" },
        { inputs: [], name: "ReachSupplyLimit", type: "error" },
        { inputs: [], name: "TokenAlreadyInGame", type: "error" },
        { inputs: [], name: "TokenCreationEnded", type: "error" },
        { inputs: [], name: "TokenDoesNotExist", type: "error" },
        { inputs: [], name: "TokenNotTradable", type: "error" },
        { inputs: [], name: "TokenPoolNotFound", type: "error" },
        { inputs: [], name: "WinnerLpBpTooHigh", type: "error" },
        { inputs: [], name: "WinnerLpBpTooLow", type: "error" },
        { inputs: [], name: "ZeroAddress", type: "error" },
        {
          anonymous: false,
          inputs: [
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
            { indexed: false, internalType: "address", name: "to", type: "address" },
          ],
          name: "FeeWithdrawal",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint48", name: "gameNumnber", type: "uint48" },
            { indexed: false, internalType: "address[]", name: "finalTokens", type: "address[]" },
          ],
          name: "FinalPhraseStarted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                { internalType: "uint40", name: "finalPhaseDuration", type: "uint40" },
                { internalType: "uint40", name: "knockoutPhraseDuration", type: "uint40" },
                { internalType: "uint256", name: "knockoutTokenNumber", type: "uint256" },
                { internalType: "uint256", name: "knockoutGoalAmount", type: "uint256" },
                { internalType: "uint256", name: "presaleTotalSupply", type: "uint256" },
                { internalType: "uint256", name: "createTokenFee", type: "uint256" },
                { internalType: "uint40", name: "blockGapNumber", type: "uint40" },
                { internalType: "uint256", name: "winnerLpBp", type: "uint256" },
                {
                  components: [
                    { internalType: "uint256", name: "PurchaseWeightBp", type: "uint256" },
                    { internalType: "uint256", name: "VolumeWeightBp", type: "uint256" },
                    { internalType: "uint256", name: "MCWeightBp", type: "uint256" },
                  ],
                  internalType: "struct IMemexGame.KnockoutWeight",
                  name: "knockoutWeight",
                  type: "tuple",
                },
              ],
              indexed: false,
              internalType: "struct IMemexGame.GameConfig",
              name: "config",
              type: "tuple",
            },
          ],
          name: "GameConfigUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint48", name: "gameNumber", type: "uint48" },
            { indexed: true, internalType: "address", name: "highestPriceToken", type: "address" },
            { indexed: true, internalType: "address", name: "lowestPriceToken", type: "address" },
            { indexed: false, internalType: "uint256", name: "highestTokenPrice", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "lowestTokenPrice", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "highestLiquidityReward", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "lowestLiquidityReward", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "prizePoolFee", type: "uint256" },
          ],
          name: "GameFinalized",
          type: "event",
        },
        { anonymous: false, inputs: [{ indexed: true, internalType: "uint48", name: "gameNumber", type: "uint48" }], name: "GameStarted", type: "event" },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "owner", type: "address" },
            { indexed: true, internalType: "address", name: "token", type: "address" },
            { indexed: true, internalType: "uint256", name: "value", type: "uint256" },
          ],
          name: "HolderPosition",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint48", name: "gameNumber", type: "uint48" },
            { indexed: false, internalType: "address", name: "token1", type: "address" },
            { indexed: false, internalType: "address", name: "token2", type: "address" },
            { indexed: false, internalType: "address", name: "token3", type: "address" },
            { indexed: false, internalType: "address", name: "token4", type: "address" },
          ],
          name: "KnockoutPairing",
          type: "event",
        },
        { anonymous: false, inputs: [{ indexed: false, internalType: "uint256", name: "luanchFee", type: "uint256" }], name: "LaunchFeeUpdated", type: "event" },
        {
          anonymous: false,
          inputs: [
            { indexed: false, internalType: "address", name: "factory", type: "address" },
            { indexed: false, internalType: "address", name: "router", type: "address" },
            { indexed: false, internalType: "address", name: "dexLauncher", type: "address" },
          ],
          name: "MemexDayInitialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint48", name: "gameNumber", type: "uint48" },
            { indexed: false, internalType: "uint256", name: "blockNumber", type: "uint256" },
          ],
          name: "Phrase1Ended",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint48", name: "gameNumber", type: "uint48" },
            { indexed: true, internalType: "address", name: "token", type: "address" },
            { indexed: true, internalType: "address", name: "from", type: "address" },
            { indexed: false, internalType: "address", name: "to", type: "address" },
            { indexed: false, internalType: "bool", name: "isMint", type: "bool" },
            { indexed: false, internalType: "uint256", name: "tokenAmount", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "ethAmount", type: "uint256" },
          ],
          name: "Presale",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint48", name: "gameNumber", type: "uint48" },
            { indexed: true, internalType: "address", name: "token", type: "address" },
            { indexed: true, internalType: "address", name: "creator", type: "address" },
            { indexed: false, internalType: "address", name: "pair", type: "address" },
            { indexed: false, internalType: "string", name: "name", type: "string" },
            { indexed: false, internalType: "string", name: "ticker", type: "string" },
            { indexed: false, internalType: "string", name: "image", type: "string" },
            { indexed: false, internalType: "string", name: "description", type: "string" },
            { indexed: false, internalType: "string", name: "twitter", type: "string" },
            { indexed: false, internalType: "string", name: "telegram", type: "string" },
            { indexed: false, internalType: "string", name: "website", type: "string" },
          ],
          name: "TokenCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint48", name: "gameNumber", type: "uint48" },
            { indexed: true, internalType: "address", name: "token", type: "address" },
            { indexed: false, internalType: "uint256", name: "remainingSeats", type: "uint256" },
          ],
          name: "TokenEnteredKnockout",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint48", name: "gameNumber", type: "uint48" },
            { indexed: false, internalType: "address", name: "winner", type: "address" },
            { indexed: false, internalType: "uint256", name: "score", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "price", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "marketCap", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "liquidity", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "volume", type: "uint256" },
          ],
          name: "TokenEnteredTop4",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "token", type: "address" },
            { indexed: true, internalType: "address", name: "pair", type: "address" },
            { indexed: false, internalType: "uint256", name: "price", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "marketCap", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "liquidity", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "volume", type: "uint256" },
          ],
          name: "TokenInfoUpdated",
          type: "event",
        },
        { anonymous: false, inputs: [{ indexed: false, internalType: "uint256", name: "tokenMaxTx", type: "uint256" }], name: "TokenMaxTxUpdated", type: "event" },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint256", name: "gameNumber", type: "uint256" },
            { indexed: false, internalType: "address", name: "tk", type: "address" },
            { indexed: false, internalType: "address", name: "poolAddress", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount0", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "amount1", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "liquidity", type: "uint256" },
          ],
          name: "V2PoolLaunched",
          type: "event",
        },
        {
          inputs: [{ internalType: "uint48", name: "_gameNumber", type: "uint48" }],
          name: "allTokens",
          outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                { internalType: "string", name: "name", type: "string" },
                { internalType: "string", name: "ticker", type: "string" },
                { internalType: "string", name: "desc", type: "string" },
                { internalType: "string", name: "img", type: "string" },
                { internalType: "string[3]", name: "urls", type: "string[3]" },
              ],
              internalType: "struct IMemexGame.TokenCreation",
              name: "tokenCreation",
              type: "tuple",
            },
          ],
          name: "createToken",
          outputs: [
            { internalType: "address", name: "", type: "address" },
            { internalType: "address", name: "", type: "address" },
            { internalType: "uint256", name: "", type: "uint256" },
          ],
          stateMutability: "payable",
          type: "function",
        },
        { inputs: [], name: "enterFinalPhrase", outputs: [], stateMutability: "nonpayable", type: "function" },
        {
          inputs: [{ internalType: "uint48", name: "_gameNumber", type: "uint48" }],
          name: "finalTokens",
          outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
          stateMutability: "view",
          type: "function",
        },
        { inputs: [], name: "finalizeGame", outputs: [], stateMutability: "nonpayable", type: "function" },
        {
          inputs: [],
          name: "gameConfig",
          outputs: [
            {
              components: [
                { internalType: "uint40", name: "finalPhaseDuration", type: "uint40" },
                { internalType: "uint40", name: "knockoutPhraseDuration", type: "uint40" },
                { internalType: "uint256", name: "knockoutTokenNumber", type: "uint256" },
                { internalType: "uint256", name: "knockoutGoalAmount", type: "uint256" },
                { internalType: "uint256", name: "presaleTotalSupply", type: "uint256" },
                { internalType: "uint256", name: "createTokenFee", type: "uint256" },
                { internalType: "uint40", name: "blockGapNumber", type: "uint40" },
                { internalType: "uint256", name: "winnerLpBp", type: "uint256" },
                {
                  components: [
                    { internalType: "uint256", name: "PurchaseWeightBp", type: "uint256" },
                    { internalType: "uint256", name: "VolumeWeightBp", type: "uint256" },
                    { internalType: "uint256", name: "MCWeightBp", type: "uint256" },
                  ],
                  internalType: "struct IMemexGame.KnockoutWeight",
                  name: "knockoutWeight",
                  type: "tuple",
                },
              ],
              internalType: "struct IMemexGame.GameConfig",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint48", name: "_gameNumber", type: "uint48" }],
          name: "knockoutTokens",
          outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "tk", type: "address" },
            { internalType: "int24", name: "poolTick_", type: "int24" },
            { internalType: "int24", name: "tickLower_", type: "int24" },
            { internalType: "int24", name: "tickHigher_", type: "int24" },
            { internalType: "uint256", name: "minTkAmount", type: "uint256" },
            { internalType: "uint256", name: "minGasAmount", type: "uint256" },
          ],
          name: "launchPoolV3",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint40", name: "_gameNumber", type: "uint40" }],
          name: "liquidityReserves",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "token", type: "address" }],
          name: "pool",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "tk", type: "address" },
            { internalType: "address", name: "to", type: "address" },
          ],
          name: "presaleBuyTokens",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint256", name: "amountIn", type: "uint256" },
            { internalType: "address", name: "tk", type: "address" },
            { internalType: "address", name: "to", type: "address" },
          ],
          name: "presaleSellTokens",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        { inputs: [], name: "randomizeKnockoutPairing", outputs: [], stateMutability: "nonpayable", type: "function" },
        {
          inputs: [
            {
              components: [
                { internalType: "uint40", name: "finalPhaseDuration", type: "uint40" },
                { internalType: "uint40", name: "knockoutPhraseDuration", type: "uint40" },
                { internalType: "uint256", name: "knockoutTokenNumber", type: "uint256" },
                { internalType: "uint256", name: "knockoutGoalAmount", type: "uint256" },
                { internalType: "uint256", name: "presaleTotalSupply", type: "uint256" },
                { internalType: "uint256", name: "createTokenFee", type: "uint256" },
                { internalType: "uint40", name: "blockGapNumber", type: "uint40" },
                { internalType: "uint256", name: "winnerLpBp", type: "uint256" },
                {
                  components: [
                    { internalType: "uint256", name: "PurchaseWeightBp", type: "uint256" },
                    { internalType: "uint256", name: "VolumeWeightBp", type: "uint256" },
                    { internalType: "uint256", name: "MCWeightBp", type: "uint256" },
                  ],
                  internalType: "struct IMemexGame.KnockoutWeight",
                  name: "knockoutWeight",
                  type: "tuple",
                },
              ],
              internalType: "struct IMemexGame.GameConfig",
              name: "newConfig",
              type: "tuple",
            },
          ],
          name: "setGameConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        { inputs: [{ internalType: "uint56", name: "_launchFee", type: "uint56" }], name: "setLaunchFee", outputs: [], stateMutability: "nonpayable", type: "function" },
        { inputs: [{ internalType: "uint56", name: "_tokenMaxTx", type: "uint56" }], name: "setTokenMaxTx", outputs: [], stateMutability: "nonpayable", type: "function" },
        { inputs: [], name: "startGame", outputs: [], stateMutability: "nonpayable", type: "function" },
        {
          inputs: [{ internalType: "uint48", name: "_gameNumber", type: "uint48" }],
          name: "winners",
          outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "address", name: "to", type: "address" },
          ],
          name: "withdrawFees",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
    },
  ],
  plugins: [react()],
});
